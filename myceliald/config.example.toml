# sample node config

# MYCELIAL NODE
# "Node" refers to the container, VM, or bare metal machine where this
# Sqlite Physical Replication Client is installed.
[node]
display_name = "Dev"       # Human-readable Name for this Sqlite Physical Replication Client
unique_id = "dev"          # Unique ID for this Sqlite Physical Replication Client
storage_path = "client.db" # Path and name of SQLite database to store this Sqlite Physical Replication Client's state
auth_token = "9eba38dd-2bfa-4fe0-8da5-4df0b1a17918" # Generated by control plane & used to register this daemon

# MYCELIAL SERVER
# Replace with the endpoint for your Sqlite Physical Replication Server
[server]
endpoint = "http://localhost:7777" # Default Sqlite Physical Replication Server endpoint

# This sqlite connector is a work in progress alpha version. Uncomment to use.
[[sources]]
type = "sqlite_connector"
display_name = "Sqlite Source"
path = "test.sqlite"
origin = "origin"
query = "select * from test"

[[sources]]
type = "excel_connector"
display_name = "Excel Source"
path = "test.xlsx"
sheets = "*"
strict = false

# SOURCES
# Define all data sources (data stores and directory paths)
# accessible by the Node that should be exposed as SOURCES to Sqlite Physical Replication Server

[[sources]]
type = "sqlite_physical_replication"
display_name = "Sqlite Physical Replication Movie"
journal_path = "/tmp/something.sqlite.mycelial_src"

[[sources]]
type = "hello_world"
interval_milis = 5000
message = "Hello World"
display_name = "Hello World Src"

[[sources]]
type = "tagging_transformer"
column = "tag"
text = "text"
display_name = "Tagging Transformer"

[[sources]]
type = "typecast_transformer"
display_name = "Typecast Transformer"
from = "any"
target_type = "string"
column = "name"

[[sources]]
type = "snowflake"
display_name = "snowflake query"
username = "username"
password = "password"
role = "role"
account_identifier = "account_identifier"
warehouse = "warehouse"
database = "database"
schema = "schema"
query = "query"
delay = 5

[[sources]]
type = "postgres_connector"
display_name = "postgres source"
url = "postgres://user:password@localhost:5432/test"
origin = "*"
query = "select * from test"
poll_interval = 5

[[sources]]
type = "file"
display_name = "file source"
path = "Cargo.toml"


# DESTINATIONS
# Define all data DESTINATIONS (data stores and directory paths)
# accessible by the Node that should be exposed as DESTINATIONS to the Sqlite Physical Replication Server

[[destinations]]
type = "sqlite_physical_replication"
display_name = "Sqlite Physical Replication Movie"
journal_path = "/tmp/something.sqlite.mycelial"
database_path = "/tmp/hydrated_db.sqlite"

[[destinations]]
type = "hello_world"
display_name = "Hello World Dest"

# This sqlite connector is a work in progress alpha version. Uncomment to use.
[[destinations]]
type = "sqlite_connector"
display_name = "Sqlite Destination"
path = "test_dest.sqlite"
truncate = false

# This kafka connector is a work in progress alpha version. Uncomment to use.
[[destinations]]
type = "kafka"
display_name = "Kafka Destination"
brokers = "localhost:9092"
topic = "test"

[[destinations]]
type = "snowflake"
display_name = "snowflake destination"
username = "username"
password = "password"
role = "role"
account_identifier = "account_identifier"
warehouse = "warehouse"
database = "database"
schema = "schema"
truncate = true

[[destinations]]
type = "postgres_connector"
display_name = "postgres destination"
url = "postgres://user:password@127.0.0.1:5432/test"
schema = "replica"
truncate = false

[[sources]]
type = "mysql_connector"
display_name = "mysql source"
origin = "test"
url = "mysql://username:password@127.0.0.1:3306/test"
query = "select * from test"
poll_interval = 5

[[destinations]]
type = "mysql_connector"
display_name = "mysql destination"
url = "mysql://username:password@127.0.0.1:3306/test"
truncate = false

[[destinations]]
type = "file"
display_name = "file destination"
path = "/tmp/Cargo.toml"
